{"searchDocs":[{"title":"DebugRandom","type":0,"sectionRef":"#","url":"/DebugRandom/api/DebugRandom","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#types","content":" ","version":null,"tagName":"h2"},{"title":"SerializedDebugRandom​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#SerializedDebugRandom","content":"&lt;/&gt; type SerializedDebugRandom = { ClassName: &quot;DebugRandom&quot;, Seed: number, NumCount: number, IntCount: number, }  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#properties","content":" ","version":null,"tagName":"h2"},{"title":"ClassName​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#ClassName","content":"This item is read only and cannot be modified. Read Only Prototype Property &lt;/&gt; DebugRandom.ClassName: &quot;DebugRandom&quot;  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#new","content":"&lt;/&gt; DebugRandom.new(seed: number?) → DebugRandom Returns a new DebugRandom object.  ","version":null,"tagName":"h3"},{"title":"fromString​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#fromString","content":"&lt;/&gt; DebugRandom.fromString(data: string) → DebugRandom Deserializes a string into a DebugRandom object. The string should have come from the DebugRandom:__tostring() metamethod. local rng = DebugRandom.new() print(rng:NextNumber()) local str = tostring(rng) local rngClone = DebugRandom.fromString(str) assert(rngClone == rng)   ","version":null,"tagName":"h3"},{"title":"isDebugRandom​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#isDebugRandom","content":"&lt;/&gt; DebugRandom.isDebugRandom(obj: any) → boolean Returns true if obj is a DebugRandom.  ","version":null,"tagName":"h3"},{"title":"deserialize​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#deserialize","content":"&lt;/&gt; DebugRandom.deserialize(data: SerializedDebugRandom) → DebugRandom Deserializes the data into a DebugRandom object. This data should have come from the DebugRandom:Serialize() method.  ","version":null,"tagName":"h3"},{"title":"__eq​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#__eq","content":"&lt;/&gt; DebugRandom:__eq(other: DebugRandom) → boolean This metamethod tests for self and other values to be equal and is used by the operators == and ~=.  ","version":null,"tagName":"h3"},{"title":"__tostring​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#__tostring","content":"&lt;/&gt; DebugRandom:__tostring() → string This metamethod serializes self and transforms it into a string.  ","version":null,"tagName":"h3"},{"title":"CloneRandom​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#CloneRandom","content":"&lt;/&gt; DebugRandom:CloneRandom() → Random  Returns a clone of DebugRandom's internal Random object.  ","version":null,"tagName":"h3"},{"title":"NextInteger​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#NextInteger","content":"&lt;/&gt; DebugRandom:NextInteger( min: number, max: number ) → number Returns a pseudorandom integer uniformly distributed over [min, max].  ","version":null,"tagName":"h3"},{"title":"NextNumber​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#NextNumber","content":"&lt;/&gt; DebugRandom:NextNumber() → number Returns a pseudorandom number uniformly distributed over [0, 1).  ","version":null,"tagName":"h3"},{"title":"NextNumber​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#NextNumber","content":"&lt;/&gt; DebugRandom:NextNumber( min: number, max: number ) → number Returns a pseudorandom number uniformly distributed over [min, max).  ","version":null,"tagName":"h3"},{"title":"Shuffle​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#Shuffle","content":"&lt;/&gt; DebugRandom:Shuffle(tb: table) → () Uniformly shuffles the array part of tb in-place using NextInteger to pick indices. If there are any nil &quot;holes&quot; in the array part of the table, Shuffle throws an error, since shuffling could change the length. The hash part of tb is ignored. No metamethods of tb are invoked. The shuffle is defined to be a Fisher-Yates shuffle so the number of NextInteger calls is guaranteed to be consistent between engine versions for a given size of table.  ","version":null,"tagName":"h3"},{"title":"NextUnitVector​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#NextUnitVector","content":"&lt;/&gt; DebugRandom:NextUnitVector() → number Returns a unit vector with a pseudorandom direction. Vectors returned from this function are uniformly distributed over the unit sphere.  ","version":null,"tagName":"h3"},{"title":"Clone​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#Clone","content":"&lt;/&gt; DebugRandom:Clone() → DebugRandom Returns a new DebugRandom object with the same state as the original.  ","version":null,"tagName":"h3"},{"title":"Serialize​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#Serialize","content":"&lt;/&gt; DebugRandom:Serialize() → SerializedDebugRandom Returns a serialized version of the DebugRandom.  ","version":null,"tagName":"h3"},{"title":"SetSerializedState​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#SetSerializedState","content":"&lt;/&gt; DebugRandom:SetSerializedState(data: SerializedDebugRandom) → () Set the DebugRandom's state. This state should have come from the DebugRandom:Serialize() method.  ","version":null,"tagName":"h3"},{"title":"CopyStateFrom​","type":1,"pageTitle":"DebugRandom","url":"/DebugRandom/api/DebugRandom#CopyStateFrom","content":"&lt;/&gt; DebugRandom:CopyStateFrom(other: DebugRandom) → () Set the state of the calling DebugRandom to the state of the other DebugRandom. ","version":null,"tagName":"h3"}],"options":{"id":"default"}}