"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{1198:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"type":"mdx","permalink":"/DebugRandom/","source":"@site/pages/index.md","description":"Usage","frontMatter":{},"unlisted":false}');var s=t(4848),a=t(8453);const o={},i=void 0,d={},c=[{value:"Usage",id:"usage",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example use:"})," Serialize a random number generator's state when an error occurs, so the error can be replicated using ",(0,s.jsxs)(n.a,{href:"https://tim7775.github.io/DebugRandom/api/DebugRandom#SetSerializedState",children:["DebugRandom",":SetSerializedState"]})," or ",(0,s.jsx)(n.a,{href:"https://tim7775.github.io/DebugRandom/api/DebugRandom#deserialize",children:"DebugRandom.deserialize"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"local rng = DebugRandom.new()\nprint(rng:NextNumber())\n\nlocal state = rng:Serialize()\nlocal deserializedRng = DebugRandom.deserialize(state)\nassert(rng == deserializedRng)\nassert(rng:NextNumber() == deserializedRng:NextNumber())\nassert(rng == DebugRandom.fromString(tostring(rng)))\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);